
/*
 * SQL COCO/R specification
 *
 *  Created on: 17-Nov-2009
 *      Author: Atul Shukla (atul.shukla@iiitb.net)
 */

COMPILER Sql
int flagg;
IGNORECASE

CHARACTERS

char = 'A'..'Z' + 'a'..'z'.
digit = '0'..'9'.
strr=ANY-'\''.


TOKENS
c=(char{(char|digit)}).
const = "'"strr{strr}"'".
num=digit{digit}.
rel="<=" | ">="|"!="|">"|"<"|"==".

PRODUCTIONS

Sql(.flagg=0;.) = (Define_data).

Define_data=									(. List<column_keyvalue> a;
												   string table; .)	

Create_command<a,table>	";"						(.//cout<<"Inside atg"<<errors->count;
													if(errors.count==0){
												  _create(table,a);flagg=1;
													}.)						

.


/*----------------------------------Start of Create-------------------------------------------------*/

Create_command<. List<column_keyvalue> a, string table .>  													 
= "create" "table" 
str<table> 
"(" 
(Name_type_pair<a>{","Name_type_pair<a>})
")" 											
.

Name_type_pair<.List<column_keyvalue> a.>         (. string name,typ,temp,temp2;column_keyvalue kv;
														kv.isdefault=false;
														kv.isindex=false;
														kv.isnull=true;.)
=str<name>type<typ>["null"                      (.  kv.isnull=true;	  .)
|"not" "null"									(. kv.isnull=false;	  .)	
] ["default" (str<temp2>|number<temp2>)							(. kv.isdefault=true;
												   kv.def=temp2;        .)
] ["index"										(. kv.isindex=true;      .)
]												(. 												   
												   kv.name=name;
												   kv.type=typ;
												   a.Add(kv);.)
.

type<out string  type>								(.string num;.)
=("int"											(.type=type+("int");.)
|"float"										(.type=type+("float");.)
|"long"											(.type=type+("long");.)
|"date"											(.type=type+("date");.)
|"time"											(.type=type+("time");.)
|"numeric"										(.type=type+("num");.)
|"char("number<num> 							(.type=type+("char/");
												  type=type+(num);.)
")"|"varchar("number<num>						(.type=type+("varchar/");
												  type=type+(num);.)
")").

/*----------------------------------End of Create-------------------------------------------------*/


Condition<. out List<int> condition,put List<string> a, out List<string> b,out List<string> c ,out int count.>  (. int temp; .)	
 = con<condition,a,b,c,count> {((.temp=-1;.)"and"|(.temp=-2;.)"or") con<condition,a,b,c,count>(.condition.Add(temp);.)}  .

con<. out List<int> x,out List<string> a,out List<string> b,out List<string> c ,out int count.>="(" Condition<x,a,b,c,count> ")"| (.x.Add(count);count++;.)str_list<a> r_list<b> (number_list<c>| strconst_list<c>).



str_list<.out List<string> list.>					(.string temp;.)

 = str<temp>									(.list.Add(temp);.)
 
 .
strconst_list<.out List<string> list.>					(.string temp;.)

 = strconst<temp>									(.list.Add(temp);.)
 
 .
number_list<.out List<string> list.>					(.string temp;.)

 = number<temp>									(.list.Add(temp);.)
 
 .
str<out string  xz>=
c												(.												
												//xz.append(coco_string_create_char(t->val));
												xz=t.val;	.)
.
strconst<out string  xz>=
const												(.

												string temp;
												//temp.append(coco_string_create_char(t->val));
												temp=t.val;
												//xz.append(temp.substr(1,(strlen(temp.c_str())-2)));;
												xz=xz+temp.Substring(1,temp.Length-2);
												.)
.
number<out string a>
=num 											(.
													//a.append(coco_string_create_char(t->val));
													a=t.val;
													.)
.



r_list<.out List<string> list.>					(.string temp;.)

 = r<temp>									(.list.Add(temp);.)
 
 .
 
 r<out string ab>
=rel(.//ab.append(coco_string_create_char(t->val));
ab=t.val;
.)
.

END Sql.
